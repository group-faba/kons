import os
import json
import logging
import threading
from datetime import datetime

import gspread
from oauth2client.service_account import ServiceAccountCredentials
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(level=logging.INFO)

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TOKEN      = os.environ["TELEGRAM_TOKEN"]
SHEET_ID   = os.environ["SHEET_ID"]
CREDS_JSON = json.loads(os.environ["GSPREAD_CREDENTIALS_JSON"])
PORT       = int(os.environ.get("PORT", "8080"))

# --- Google Sheets Setup ---
SCOPES      = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds       = ServiceAccountCredentials.from_json_keyfile_dict(CREDS_JSON, SCOPES)
gc          = gspread.authorize(creds)
spreadsheet = gc.open_by_key(SHEET_ID)
worksheet   = spreadsheet.worksheet("–õ–∏—Å—Ç1")  # <-- –∏–º—è –≤–∞—à–µ–≥–æ –ª–∏—Å—Ç–∞

# --- Flask Healthcheck ---
app = Flask(__name__)

@app.route("/")
def health():
    return "OK", 200

# --- /webapp: –¥–∞—ë–º –∫–Ω–æ–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
async def cmd_webapp(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    kb = [[
        InlineKeyboardButton(
            "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É",
            web_app=WebAppInfo(url="https://telegram-kons.vercel.app/")
        )
    ]]
    await update.message.reply_text(
        "–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É:",
        reply_markup=InlineKeyboardMarkup(kb)
    )

# --- –ü—Ä–∏—ë–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp –∏ –∑–∞–ø–∏—Å—å –≤ Google Sheets ---
async def handle_webapp_data(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    raw  = update.message.web_app_data.data
    logging.info("WEB_APP_DATA payload: %s", raw)
    data = json.loads(raw)
    fio     = data.get("fio", "").strip()
    city    = data.get("city", "").strip()
    user_id = update.effective_user.id
    ts      = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
    worksheet.append_row([ts, fio, city, user_id])

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        f"‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞:\n"
        f"‚Ä¢ –§–ò–û: {fio}\n"
        f"‚Ä¢ –ì–æ—Ä–æ–¥: {city}"
    )

# --- –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ ---
application = (
    ApplicationBuilder()
    .token(TOKEN)
    .build()
)
application.add_handler(CommandHandler("webapp", cmd_webapp))
application.add_handler(
    MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data)
)

def run_bot():
    logging.info("üöÄ Starting Telegram polling‚Ä¶")
    application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    # 1) Flask –¥–ª—è healthcheck –≤ —Ñ–æ–Ω–µ
    t = threading.Thread(
        target=lambda: app.run(host="0.0.0.0", port=PORT),
        daemon=True
    )
    t.start()

    # 2) Telegram-polling –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    run_bot()
